library("rstan")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
setwd("~/2COPIES/develop/Bayes/Rstan/Course_20170410/install_test")
library("rstan")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
print(fit)
plot(fit)
pairs(fit, pars = c("mu", "tau", "lp__"))
la <- extract(fit, permuted = TRUE) # return a list of arrays
mu <- la$mu
### return an array of three dimensions: iterations, chains, parameters
a <- extract(fit, permuted = FALSE)
### use S3 functions as.array (or as.matrix) on stanfit objects
a2 <- as.array(fit)
m <- as.matrix(fit)
print(fit, digits = 1)
J <- 8
y <- c(28,  8, -3,  7, -1,  1, 18, 12)
sigma <- c(15, 10, 16, 11,  9, 11, 10, 18)
schools_dat <- read_rdump('8schools.rdump')
schools_dat <- read_rdump('8schools.rdump')
schools_dat <- read_rdump('8schools.rdump')
fit <- stan(file = '8schools.stan', iter = 1000, chains = 4)
pairs()
library("rstan");
library("jrRstan");
library("nlme");
rstan_options(auto_write = TRUE);
options(mc.core = parallel::detectCores);
data("Oxboys");
head(Oxboys);
## observable
y = Oxboys$height;
## covariate
x = Oxboys$age;
## subject labels
subj_label = as.numeric(Oxboys$Subject);
## number of subjects
N_subj = length(unique(subj_label));
## list for Stan
Oxboys_data = list(y = y, N = length(y), N_subj = N_subj, x = x, subj_label = subj_label,
m_alpha0 = 140, s_alpha0 = 3, m_beta0 = 15, s_beta0 = 7.5,
a_sigsq = 1.1, b_sigsq = 0.025, a_sigsq_alpha1 = 1.1, b_sigsq_alpha1 = 0.05,
a_sigsq_beta1 = 1, b_sigsq_beta1 = 0.1);
randslope_1 = stan("oxboys_1.stan", data = Oxboys_data);
rstan_options(auto_write = TRUE);
options(mc.core = parallel::detectCores);
data("Oxboys");
head(Oxboys);
## observable
y = Oxboys$height;
## covariate
x = Oxboys$age;
## subject labels
subj_label = as.numeric(Oxboys$Subject);
## number of subjects
N_subj = length(unique(subj_label));
## list for Stan
Oxboys_data = list(y = y, N = length(y), N_subj = N_subj, x = x, subj_label = subj_label,
m_alpha0 = 140, s_alpha0 = 3, m_beta0 = 15, s_beta0 = 7.5,
a_sigsq = 1.1, b_sigsq = 0.025, a_sigsq_alpha1 = 1.1, b_sigsq_alpha1 = 0.05,
a_sigsq_beta1 = 1, b_sigsq_beta1 = 0.1);
randslope_1 = stan("oxboys_1.stan", data = Oxboys_data);
output = as.array(randslope_1);
str(output);
str(output);
print(randslope_1);
str(output);
vignette(jrRstan)
vignette(jrRStan)
vignette(jrRStan)library("rstan");
library("jrRstan");
library("nlme");
vignette(jrRStan)
methods(package = jrRstan)
methods(jrRstan)
str(jrRstan)
vignette(package = "jrRstan")
vignette(practical1, package = "jrRstan")
vignette(package = "jrRstan")
vignette(all =TRUE)
vignette(package = "jrRstan")
pdfviewer
vignette(package = "jrRstan", pdfviewer = "evince")
browseVignettes(package = "jrRstan", pdfviewer = "evince")
browseVignettes(package = "jrRstan")
x = out[1, - length(out)]
## Plot data:
barplot(table(x))
